<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xforceplus.wapp.modules.check.dao.InvoiceCheckMapper">

    <!--发票查验历史-->
    <resultMap id="InvoiceCheckHistoryMap" type="com.xforceplus.wapp.modules.check.entity.InvoiceCheckModel">
        <result column="id" jdbcType="INTEGER" property="id"/>
        <result column="invoice_code" jdbcType="VARCHAR" property="invoiceCode"/>
        <result column="invoice_no" jdbcType="VARCHAR" property="invoiceNo"/>
        <result column="handle_date" jdbcType="TIMESTAMP" property="handleDate"/>
        <result column="handle_code" jdbcType="VARCHAR" property="handleCode"/>
        <result column="handle_course" jdbcType="VARCHAR" property="handleCourse"/>
        <result column="check_massege" jdbcType="VARCHAR" property="checkMassege"/>
        <result column="check_user" jdbcType="VARCHAR" property="checkUser"/>
        <result column="invoice_Date" property="invoiceDate" jdbcType="TIMESTAMP"/>
        <result column="buyer_Name" property="buyerName" jdbcType="VARCHAR"/>
        <result column="total_Amount" property="totalAmount" jdbcType="DECIMAL"/>
        <result column="invoice_Amount" property="invoiceAmount" jdbcType="DECIMAL"/>
        <result column="tax_Amount" property="taxAmount" jdbcType="DECIMAL"/>
        <result column="invoice_type" property="invoiceType" jdbcType="VARCHAR"/>
        <result column="check_code" property="checkCode" jdbcType="VARCHAR"/>
        <result column="detailId" property="detailId" jdbcType="INTEGER"/>

    </resultMap>


    <!--权限-->
    <sql id="powerLimit">
    (
         SELECT tdri.* FROM t_dx_record_invoice tdri WITH(NOLOCK)
        LEFT JOIN t_ac_org tao WITH(NOLOCK) ON tao.taxno = tdri.gf_tax_no
        LEFT JOIN t_ac_user_taxno taut WITH(NOLOCK) ON taut.orgid = tao.orgid
        WHERE taut.userid = #{userId}
        ) a
    </sql>

    <!---->
    <sql id="Invoice_Check_History_List">
      tdcl.id,  tdcl.invoice_code,  tdcl.invoice_no,  tdcl.handle_date,  tdcl.handle_code,  tdcl.handle_course,  tdcl.check_massege,
     tdcl.check_user,  tdcl.invoice_Date,  tdcl.buyer_Name,  tdcl.total_Amount,  tdcl.invoice_Amount,  tdcl.tax_Amount, tdcl.invoice_type, tdcl.check_code,tdri.id as detailId
    </sql>
    <sql id="Invoice_Check_History_List1">
        tdcl.id, tdcl.invoice_code, tdcl.invoice_no, tdcl.handle_date, tdcl.handle_code, tdcl.handle_course,
        tdcl.check_massege,
        tdcl.check_user, tdcl.invoice_Date, tdcl.buyer_Name, tdcl.total_Amount, tdcl.invoice_Amount, tdcl.tax_Amount,
        tdcl.invoice_type, tdcl.check_code
    </sql>

    <!--查验历史列表
    <select id="getInvoiceCheckHistoryList"
            resultMap="InvoiceCheckHistoryMap">
        /** mycat:schema=${schemaLabel}*/
        SELECT outter_tdcl.* FROM (SELECT
        <include refid="Invoice_Check_History_List"/>
        FROM t_dx_check_log tdcl
        LEFT JOIN t_dx_record_invoice tdri ON CONCAT(tdcl.invoice_code,tdcl.invoice_no) = tdri.uuid
        WHERE 1=1
        <if test="paramsData.invoiceNo != null and paramsData.invoiceNo !=''">
            AND tdcl.invoice_no LIKE CONCAT('%',#{paramsData.invoiceNo},'%')
        </if>

        <if test="paramsData.invoiceCode != null and paramsData.invoiceCode !=''">
            AND tdcl.invoice_code LIKE CONCAT('%',#{paramsData.invoiceCode},'%')
        </if>

        <if test="paramsData.invoiceStartDate != null and paramsData.invoiceEndDate != null">
            <![CDATA[ AND  date_format(tdcl.invoice_date,'%Y-%m-%d') >= #{paramsData.invoiceStartDate} ]]>
            <![CDATA[ AND  date_format(tdcl.invoice_date,'%Y-%m-%d') <= #{paramsData.invoiceEndDate} ]]>
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(paramsData.checkStartDate) and @CheckUtils@isNotEmpty(paramsData.checkEndDate)">
            <![CDATA[ AND  date_format(tdcl.handle_date,'%Y-%m-%d') >= #{paramsData.checkStartDate} ]]>
            <![CDATA[ AND  date_format(tdcl.handle_date,'%Y-%m-%d') <= #{paramsData.checkEndDate} ]]>
        </if>
        ORDER BY tdcl.handle_date DESC
        ) outter_tdcl
     GROUP BY outter_tdcl.invoice_code,outter_tdcl.invoice_no
        <if test="paramsData.offset != null and paramsData.limit != null">
            limit #{paramsData.offset}, #{paramsData.limit}
        </if>
    </select>
        -->

    <!--查验列表记录数
    <select id="getInvoiceCheckHistoryListCount"
            resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT
        COUNT(1)
        FROM(
        SELECT
        <include refid="Invoice_Check_History_List"/>
        FROM
        t_dx_check_log tdcl
        LEFT JOIN t_dx_record_invoice tdri ON CONCAT(tdcl.invoice_code,tdcl.invoice_no) = tdri.uuid
        WHERE 1=1
        <if test="paramsData.invoiceNo != null and paramsData.invoiceNo !=''">
            AND tdcl.invoice_no LIKE CONCAT('%',#{paramsData.invoiceNo},'%')
        </if>

        <if test="paramsData.invoiceCode != null and paramsData.invoiceCode !=''">
            AND tdcl.invoice_code LIKE CONCAT('%',#{paramsData.invoiceCode},'%')
        </if>
        <if test="@CheckUtils@isNotEmpty(paramsData.invoiceStartDate) and @CheckUtils@isNotEmpty(paramsData.invoiceEndDate)">
            <![CDATA[ AND date_format(tdcl.invoice_date,'%Y-%m-%d') >= #{paramsData.invoiceStartDate} ]]>
            <![CDATA[ AND date_format(tdcl.invoice_date,'%Y-%m-%d') <= #{paramsData.invoiceEndDate} ]]>
        </if>

        <if test="@CheckUtils@isNotEmpty(paramsData.checkStartDate)  and @CheckUtils@isNotEmpty(paramsData.checkEndDate)">
            <![CDATA[ AND date_format(tdcl.handle_date,'%Y-%m-%d') >= #{paramsData.checkStartDate} ]]>
            <![CDATA[ AND date_format(tdcl.handle_date,'%Y-%m-%d') <= #{paramsData.checkEndDate} ]]>
        </if>
        GROUP BY invoice_code,invoice_no
        ) tt
    </select>
    -->

    <select id="getInvoiceCheckHistoryList" resultMap="InvoiceCheckHistoryMap">
        /** mycat:schema=${schemaLabel}*/
        SELECT tdcl.* FROM t_dx_check_log tdcl
        RIGHT JOIN (
        SELECT invoice_code,invoice_no,substring_index(GROUP_CONCAT(id order by id desc), ',',1) tempId FROM
        t_dx_check_log GROUP BY invoice_code,invoice_no
        ) a ON a.tempId = tdcl.id
        WHERE tdcl.check_user = #{paramsData.userAccount}
        <if test="paramsData.invoiceNo != null and paramsData.invoiceNo !=''">
            AND tdcl.invoice_no LIKE CONCAT('%',#{paramsData.invoiceNo},'%')
        </if>

        <if test="paramsData.invoiceCode != null and paramsData.invoiceCode !=''">
            AND tdcl.invoice_code LIKE CONCAT('%',#{paramsData.invoiceCode},'%')
        </if>
        <if test="@com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.invoiceStartDate) and @com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.invoiceEndDate)">
            <![CDATA[ AND date_format(tdcl.invoice_date,'%Y-%m-%d') >= #{paramsData.invoiceStartDate} ]]>
            <![CDATA[ AND date_format(tdcl.invoice_date,'%Y-%m-%d') <= #{paramsData.invoiceEndDate} ]]>
        </if>

        <if test="@com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.checkStartDate)  and @com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.checkEndDate)">
            <![CDATA[ AND date_format(tdcl.handle_date,'%Y-%m-%d') >= #{paramsData.checkStartDate} ]]>
            <![CDATA[ AND date_format(tdcl.handle_date,'%Y-%m-%d') <= #{paramsData.checkEndDate} ]]>
        </if>
        <if test="paramsData.offset != null and paramsData.limit != null">
            limit #{paramsData.offset}, #{paramsData.limit}
        </if>
    </select>

    <select id="getInvoiceCheckHistoryListCount" resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT COUNT(1) FROM t_dx_check_log tdcl
        RIGHT JOIN (
        SELECT invoice_code,invoice_no,substring_index(GROUP_CONCAT(id order by id desc), ',',1) tempId FROM
        t_dx_check_log GROUP BY invoice_code,invoice_no
        ) a ON a.tempId = tdcl.id
        WHERE tdcl.check_user = #{paramsData.userAccount}
        <if test="paramsData.invoiceNo != null and paramsData.invoiceNo !=''">
            AND tdcl.invoice_no LIKE CONCAT('%',#{paramsData.invoiceNo},'%')
        </if>

        <if test="paramsData.invoiceCode != null and paramsData.invoiceCode !=''">
            AND tdcl.invoice_code LIKE CONCAT('%',#{paramsData.invoiceCode},'%')
        </if>
        <if test="@com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.invoiceStartDate) and @com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.invoiceEndDate)">
            <![CDATA[ AND date_format(tdcl.invoice_date,'%Y-%m-%d') >= #{paramsData.invoiceStartDate} ]]>
            <![CDATA[ AND date_format(tdcl.invoice_date,'%Y-%m-%d') <= #{paramsData.invoiceEndDate} ]]>
        </if>

        <if test="@com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.checkStartDate)  and @com.xforceplus.wapp.modules.check.checkutils.CheckUtils@isNotEmpty(paramsData.checkEndDate)">
            <![CDATA[ AND date_format(tdcl.handle_date,'%Y-%m-%d') >= #{paramsData.checkStartDate} ]]>
            <![CDATA[ AND date_format(tdcl.handle_date,'%Y-%m-%d') <= #{paramsData.checkEndDate} ]]>
        </if>
    </select>

    <!--查验历史详情-->
    <select id="getInvoiceCheckHistoryDetail"
            resultMap="InvoiceCheckHistoryMap">
        /** mycat:schema=${schemaLabel}*/
        SELECT
        <include refid="Invoice_Check_History_List1"/>
        from t_dx_check_log tdcl
        WHERE 1=1
        <if test="paramsData.invoiceCode != null and paramsData.invoiceNo != null">
            AND tdcl.invoice_code = #{paramsData.invoiceCode}
            AND tdcl.invoice_no = #{paramsData.invoiceNo}
        </if>
        <if test="paramsData.offset != null and paramsData.limit != null">
            limit #{paramsData.offset}, #{paramsData.limit}
        </if>
    </select>

    <!--查验历史详情记录数-->
    <select id="getInvoiceCheckHistoryDetailCount"
            resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT count(1) from t_dx_check_log
        WHERE 1=1
        <if test="paramsData.invoiceCode != null and paramsData.invoiceNo != null">
            AND invoice_code = #{paramsData.invoiceCode}
            AND invoice_no = #{paramsData.invoiceNo}
        </if>
    </select>


    <!--统计查询
    <select id="getInvoiceStatistics"
            resultType="hashMap">
        /** mycat:schema=${schemaLabel}*/
        SELECT
        total_tdxl.totalCount,
        total_tdxl.checkDate,
        cg_tdcl.cgCount,
        sb_tdxl.sbCount
        FROM
        (
        SELECT
        COUNT(outter_tdcl.invoice_code) AS 'totalCount', #发票查验总数
        outter_tdcl.*
        FROM
        (
        SELECT
        'totalCount' AS 'countType',
        DATE_FORMAT(tdcl.handle_date, '%Y-%m') AS checkDate,
        tdcl.invoice_code,
        tdcl.invoice_no
        FROM
        t_dx_check_log tdcl
        WHERE
        1 = 1
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(tdcl.invoice_date,'%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY
        tdcl.invoice_code,
        tdcl.invoice_no,
        DATE_FORMAT(tdcl.handle_date, '%Y-%m')
        ) outter_tdcl
        ) total_tdxl
        LEFT JOIN (
        SELECT
        COUNT(outter_tdcl.invoice_code) AS 'cgCount',#成功
        outter_tdcl.*
        FROM
        (
        SELECT
        DATE_FORMAT(tdcl.handle_date, '%Y-%m') AS checkDate,
        tdcl.invoice_code,
        tdcl.invoice_no
        FROM
        t_dx_check_log tdcl
        WHERE
        tdcl.handle_code = '0001'
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(tdcl.invoice_date,'%Y') = #{paramsData.invoiceYear}
        </if>

        GROUP BY
        tdcl.invoice_code,
        tdcl.invoice_no,
        DATE_FORMAT(tdcl.handle_date, '%Y-%m')
        ) outter_tdcl
        ) cg_tdcl ON total_tdxl.checkDate = cg_tdcl.checkDate
        LEFT JOIN (
        SELECT
        count(1) AS 'sbCount',#失败
        outter_tdcl.*
        FROM
        (
        SELECT
        DATE_FORMAT(tdcl.handle_date, '%Y-%m') AS checkDate,
        tdcl.invoice_code,
        tdcl.invoice_no
        FROM
        t_dx_check_log tdcl
        WHERE
        tdcl.handle_code != '0001'
        AND CONCAT(tdcl.invoice_code,tdcl.invoice_no) NOT IN (
        SELECT
        CONCAT(tdcl.invoice_code,tdcl.invoice_no)
        FROM
        t_dx_check_log tdcl
        WHERE
        tdcl.handle_code = '0001'
        )

        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(tdcl.invoice_date,'%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY
        tdcl.invoice_code,
        tdcl.invoice_no,
        DATE_FORMAT(tdcl.handle_date, '%Y-%m')
        ) outter_tdcl
        ) sb_tdxl ON (
        total_tdxl.checkDate = sb_tdxl.checkDate
        <![CDATA[  AND CONCAT(IFNULL(cg_tdcl.invoice_code,'wtf'),IFNULL(cg_tdcl.invoice_no,'wtf'))
        <>
        CONCAT(IFNULL(sb_tdxl.invoice_code,'fuck'),IFNULL(sb_tdxl.invoice_no,'fuck')) ]]>
        )
        <if test="paramsData.offset != null and paramsData.limit != null">
            limit #{paramsData.offset}, #{paramsData.limit}
        </if>
    </select>
    -->

    <select id="getInvoiceStatistics" resultType="map">
        /** mycat:schema=${schemaLabel}*/
        SELECT
        count(DISTINCT(CONCAT(invoice_code, invoice_no))) as 'totalCount',
        DATE_FORMAT(handle_date, '%Y-%m') checkDate
        FROM t_dx_check_log
        WHERE
        check_user = #{paramsData.userAccount}
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(handle_date, '%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY checkDate
        <if test="paramsData.offset != null and paramsData.limit != null">
            limit #{paramsData.offset}, #{paramsData.limit}
        </if>
    </select>

    <select id="getInvoiceStatisticsCount" resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT count(1) FROM (
        SELECT
        count(DISTINCT(CONCAT(invoice_code, invoice_no))) as 'totalCount',
        DATE_FORMAT(handle_date, '%Y-%m') checkDate
        FROM t_dx_check_log
        WHERE
        check_user = #{paramsData.userAccount}
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
              AND date_format(handle_date, '%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY checkDate
        ) a
    </select>

    <select id="getInvoiceStatisticsCountByMonth" resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT COUNT(DISTINCT(CONCAT(invoice_code, invoice_no))) FROM t_dx_check_log WHERE check_user = #{userAccount} AND handle_code = '0001' AND  DATE_FORMAT(handle_date, '%Y-%m') = #{checkDate}
    </select>

    <!--统计查询记录数
    <select id="getInvoiceStatisticsCount"
            resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT count(1) FROM (
        SELECT total_tdxl.totalCount,total_tdxl.checkDate,cg_tdcl.cgCount,sb_tdxl.sbCount from (
        SELECT COUNT(1) AS 'totalCount','totalCount' as 'countType',DATE_FORMAT(tdcl.handle_date,'%Y-%m') AS checkDate
        from t_dx_check_log tdcl
        WHERE 1=1
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(tdcl.invoice_date,'%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY DATE_FORMAT(tdcl.handle_date,'%Y-%m')
        ) total_tdxl
        LEFT JOIN (
        SELECT count(1) AS 'cgCount',DATE_FORMAT(tdcl.handle_date,'%Y-%m') AS checkDate
        from t_dx_check_log tdcl where tdcl.handle_code ='0001'
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(tdcl.invoice_date,'%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY DATE_FORMAT(tdcl.handle_date,'%Y-%m')
        ) cg_tdcl ON total_tdxl.checkDate = cg_tdcl.checkDate
        LEFT JOIN (
        SELECT count(1) AS 'sbCount',DATE_FORMAT(tdcl.handle_date,'%Y-%m') AS checkDate
        from t_dx_check_log tdcl where tdcl.handle_code !='0001'
        <if test="paramsData.invoiceYear != null and paramsData.invoiceYear !=''">
            AND date_format(tdcl.invoice_date,'%Y') = #{paramsData.invoiceYear}
        </if>
        GROUP BY DATE_FORMAT(tdcl.handle_date,'%Y-%m')
        ) sb_tdxl ON total_tdxl.checkDate= sb_tdxl.checkDate
        ) outter_outter_tdxl
    </select>
-->

    <!--查验历史-新增-->
    <insert id="doInvoiceCheckLogAdd">
              /** mycat:schema=${schemaLabel}*/
    insert into t_dx_check_log (invoice_code, invoice_no, handle_date,
      handle_code, handle_course, check_massege,
      check_user, invoice_Date, buyer_Name,
      total_Amount, invoice_Amount, tax_Amount ,invoice_type,check_code
      )
        values (#{paramsData.invoiceCode,jdbcType=VARCHAR}, #{paramsData.invoiceNo,jdbcType=VARCHAR}, #{paramsData.handleDate,jdbcType=TIMESTAMP},
      #{paramsData.handleCode,jdbcType=VARCHAR}, #{paramsData.handleCourse,jdbcType=VARCHAR}, #{paramsData.checkMassege,jdbcType=VARCHAR},
      #{paramsData.checkUser,jdbcType=VARCHAR}, #{paramsData.invoiceDate,jdbcType=TIMESTAMP}, #{paramsData.buyerName,jdbcType=VARCHAR},
      #{paramsData.totalAmount,jdbcType=DECIMAL}, #{paramsData.invoiceAmount,jdbcType=DECIMAL}, #{paramsData.taxAmount,jdbcType=DECIMAL},#{paramsData.invoiceType,jdbcType=VARCHAR},#{paramsData.checkCode,jdbcType=VARCHAR}
       )
    </insert>

    <!--主表新增-->
    <insert id="doInvoiceCheckMainAdd">
        /** mycat:schema=${schemaLabel}*/
        insert into t_dx_check_record_invoice (PDF_MD5, CYJG_CODE, CYJG_TIP,
        FPZL, FPDM, FPHM, CYCS,
        XFSH, XFMC, XFDZDH,
        XFYHZH, GFSH, GFMC,
        GFDZDH, GFYHZH, KPRQ,
        JE, SE, JSHJ, BZ,
        JQBH, KPR, SKR, FHR,
        LZFPDM, LZFPHM, ZFBZ,
        uuid, valid, create_date,
        update_date, CYRMC, CYRSBH,
        SPFMC, SPFSBH, SHRMC,
        SHRSBH, FHRMC, FHRSBH,
        QYD, YSHWXX, CZCH,
        CCDW, SFZHM, CLLX,
        CPXH, CD, HGZS, JKZMSH,
        SJDH, FDJHM, CJHM,
        SWJGDM, SWJGMC, WSPZH,
        DW, XCRS, SL, JYM,
        TXFBZ, LSLBZ)
        values (#{paramsData.pdfMd5,jdbcType=VARCHAR}, #{paramsData.cyjgCode,jdbcType=VARCHAR},
        #{paramsData.cyjgTip,jdbcType=VARCHAR},
        #{paramsData.fpzl,jdbcType=VARCHAR}, #{paramsData.fpdm,jdbcType=VARCHAR}, #{paramsData.fphm,jdbcType=VARCHAR},
        #{paramsData.cycs,jdbcType=VARCHAR},
        #{paramsData.xfsh,jdbcType=VARCHAR}, #{paramsData.xfmc,jdbcType=VARCHAR}, #{paramsData.xfdzdh,jdbcType=VARCHAR},
        #{paramsData.xfyhzh,jdbcType=VARCHAR}, #{paramsData.gfsh,jdbcType=VARCHAR}, #{paramsData.gfmc,jdbcType=VARCHAR},
        #{paramsData.gfdzdh,jdbcType=VARCHAR}, #{paramsData.gfyhzh,jdbcType=VARCHAR},
        #{paramsData.kprq,jdbcType=VARCHAR},
        #{paramsData.je,jdbcType=VARCHAR}, #{paramsData.se,jdbcType=VARCHAR}, #{paramsData.jshj,jdbcType=VARCHAR},
        #{paramsData.bz,jdbcType=VARCHAR},
        #{paramsData.jqbh,jdbcType=VARCHAR}, #{paramsData.kpr,jdbcType=VARCHAR}, #{paramsData.skr,jdbcType=VARCHAR},
        #{paramsData.fhr,jdbcType=VARCHAR},
        #{paramsData.lzfpdm,jdbcType=VARCHAR}, #{paramsData.lzfphm,jdbcType=VARCHAR},
        #{paramsData.zfbz,jdbcType=VARCHAR},
        #{paramsData.uuid,jdbcType=VARCHAR}, #{paramsData.valid,jdbcType=VARCHAR},
        #{paramsData.createDate,jdbcType=TIMESTAMP},
        #{paramsData.updateDate,jdbcType=TIMESTAMP}, #{paramsData.cyrmc,jdbcType=VARCHAR},
        #{paramsData.cyrsbh,jdbcType=VARCHAR},
        #{paramsData.spfmc,jdbcType=VARCHAR}, #{paramsData.spfsbh,jdbcType=VARCHAR},
        #{paramsData.shrmc,jdbcType=VARCHAR},
        #{paramsData.shrsbh,jdbcType=VARCHAR}, #{paramsData.fhrmc,jdbcType=VARCHAR},
        #{paramsData.fhrsbh,jdbcType=VARCHAR},
        #{paramsData.qyd,jdbcType=VARCHAR}, #{paramsData.yshwxx,jdbcType=VARCHAR}, #{paramsData.czch,jdbcType=VARCHAR},
        #{paramsData.ccdw,jdbcType=VARCHAR}, #{paramsData.sfzhm,jdbcType=VARCHAR}, #{paramsData.cllx,jdbcType=VARCHAR},
        #{paramsData.cpxh,jdbcType=VARCHAR}, #{paramsData.cd,jdbcType=VARCHAR}, #{paramsData.hgzs,jdbcType=VARCHAR},
        #{paramsData.jkzmsh,jdbcType=VARCHAR},
        #{paramsData.sjdh,jdbcType=VARCHAR}, #{paramsData.fdjhm,jdbcType=VARCHAR}, #{paramsData.cjhm,jdbcType=VARCHAR},
        #{paramsData.swjgdm,jdbcType=VARCHAR}, #{paramsData.swjgmc,jdbcType=VARCHAR},
        #{paramsData.wspzh,jdbcType=VARCHAR},
        #{paramsData.dw,jdbcType=VARCHAR}, #{paramsData.xcrs,jdbcType=VARCHAR}, #{paramsData.sl,jdbcType=VARCHAR},
        #{paramsData.jym,jdbcType=VARCHAR},
        #{paramsData.txfbz,jdbcType=VARCHAR}, #{paramsData.lslbz,jdbcType=VARCHAR})

    </insert>

    <!--明细表-新增-->
    <insert id="doInvoiceCheckDetailAdd">

        /** mycat:schema=${schemaLabel}*/
        INSERT INTO t_dx_check_record_invoice_detail (
        uuid,
        detail_no,
        goods_name,
        model,
        unit,
        num,
        unit_price,
        detail_amount,
        tax_rate,
        tax_amount,
        cph,
        lx,
        txrqq,
        txrqz,
        goods_num
        ) VALUES
            (#{model.uuid},#{model.detailNo},#{model.goodsName},#{model.model},
            #{model.unit},#{model.num},#{model.unitPrice},#{model.detailAmount},#{model.taxRate},#{model.taxAmount},#{model.cph},#{model.lx},
            #{model.txrqq},#{model.txrqz},#{model.goodsNum})
    </insert>

    <!--invoice_type = 03 明细-->
    <insert id="doInvoiceCheckVehicleDetailAdd">
             /** mycat:schema=${schemaLabel}*/
    insert into t_dx_check_vehicle_sale_invoice (uuid, buyer_id_num, vehicle_type,
        factory_model, product_place, certificate,
        certificate_import, inspection_num, engine_no,
        vehicle_no, phone, buyer_bank,
        tax_rate, tax_bureau_name, tax_bureau_code,
        tax_records, limit_people, check_status,
        tonnage, create_date)
        values (#{paramsData.uuid,jdbcType=VARCHAR}, #{paramsData.buyerIdNum,jdbcType=VARCHAR}, #{paramsData.vehicleType,jdbcType=VARCHAR},
        #{paramsData.factoryModel,jdbcType=VARCHAR}, #{paramsData.productPlace,jdbcType=VARCHAR}, #{paramsData.certificate,jdbcType=VARCHAR},
        #{paramsData.certificateImport,jdbcType=VARCHAR}, #{paramsData.inspectionNum,jdbcType=VARCHAR}, #{paramsData.engineNo,jdbcType=VARCHAR},
        #{paramsData.vehicleNo,jdbcType=VARCHAR}, #{paramsData.phone,jdbcType=VARCHAR}, #{paramsData.buyerBank,jdbcType=VARCHAR},
        #{paramsData.taxRate,jdbcType=VARCHAR}, #{paramsData.taxBureauName,jdbcType=VARCHAR}, #{paramsData.taxBureauCode,jdbcType=VARCHAR},
        #{paramsData.taxRecords,jdbcType=VARCHAR}, #{paramsData.limitPeople,jdbcType=VARCHAR}, #{paramsData.checkStatus,jdbcType=VARCHAR},
        #{paramsData.tonnage,jdbcType=VARCHAR}, #{paramsData.createDate,jdbcType=TIMESTAMP})
    </insert>


    <!--主表唯一性检查-->

    <select id="doInvoiceCheckMainUniqueCheck"
            resultType="String">
        /** mycat:schema=${schemaLabel}*/
        SELECT CYJG_CODE FROM t_dx_check_record_invoice WHERE uuid = #{paramsData.uuid}
    </select>


    <!--根据uuid获取id-->
    <select id="getInvoiceIdByUuId"
            resultType="Integer">
        /** mycat:schema=${schemaLabel}*/
        SELECT id FROM t_dx_record_invoice WITH(NOLOCK) WHERE uuid = #{uuid}
    </select>

    <delete id="deleteCheckInvoice">
        /** mycat:schema=${schemaLabel}*/
        DELETE FROM t_dx_check_record_invoice WHERE uuid = #{uuid}
    </delete>

    <!-- 查看发票是否有人查验 为空则没人查验 -->
    <select id="getCheckUser" resultType="String">
        /** mycat:schema=${schemaLabel}*/
        SELECT check_user FROM t_dx_check_log WHERE invoice_code = #{invoiceCode} AND invoice_no = #{invoiceNo} limit 1
    </select>
</mapper>