<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xforceplus.wapp.modules.base.dao.ReleaseAnnouncementDao">

    <resultMap id="reportStatisticsMap" type="com.xforceplus.wapp.modules.report.entity.ReportStatisticsEntity">
        <result column="totalCount" property="totalCount" />
        <result column="totalAmount" property="totalAmount" />
        <result column="pcTotalAmount" property="pcTotalAmount" />
        <result column="mdTotalAmount" property="mdTotalAmount" />
    </resultMap>
    <select id="getCustomAnnouncementCount" resultType="Integer">

        SELECT COUNT(*)
        FROM t_dx_annoucement_debt t
        WHERE t.is_release=0
        <if test="venderId != null and venderId != ''">
            and vender_id like  '%'+#{venderId}+'%'
        </if>
        <if test="createStartDate != null and createStartDate != ''">
            <![CDATA[ AND convert(varchar(100),upload_date,23) >= #{createStartDate} ]]>
        </if>
        <if test="createEndDate != null and createEndDate != ''">
            <![CDATA[ AND convert(varchar(100),upload_date,23)  <= #{createEndDate} ]]>
        </if>
    </select>

    <select id="customAnnouncementList" resultType="com.xforceplus.wapp.modules.base.entity.DebtEntity">
        <if test="offset != null and limit != null">
            select top (#{limit}) a.*
            from
            (select row_number() over(order by o.upload_date desc) as rownumber,o.*
            from(
        </if>
        SELECT
         *
        from t_dx_annoucement_debt t
        WHERE t.is_release=0
        <if test="venderId != null and venderId != ''">
            and vender_id like  '%'+#{venderId}+'%'
        </if>
        <if test="createStartDate != null and createStartDate != ''">
            <![CDATA[ AND convert(varchar(100),upload_date,23) >= #{createStartDate} ]]>
        </if>
        <if test="createEndDate != null and createEndDate != ''">
            <![CDATA[ AND convert(varchar(100),upload_date,23)  <= #{createEndDate} ]]>
        </if>

        <if test="offset != null and limit != null">
            )as o
            )a
            where rownumber>#{offset};
        </if>

    </select>

    <select id="getDebtCount" resultMap="reportStatisticsMap">

        SELECT COUNT(*) totalCount,ISNULL(sum(price_difference),0) pcTotalAmount,ISNULL(sum(compensation_amount),0) mdTotalAmount,
        ISNULL(sum(price_difference),0)+ISNULL(sum(compensation_amount),0) totalAmount
        FROM t_dx_annoucement_debt t
        WHERE 1=1
        <if test="all != '1'.toString()">
         and t.is_release=1   and vender_id =#{venderId}
        <![CDATA[ and convert(varchar(100),releasetime,20) = #{releasetime}]]>
        </if>
        <if test="supplierAnnoucement != '1'.toString()">
            and have_read=0
        </if>
        <if test="announcementType != '4'.toString()">
            and debt_type=#{announcementType}
        </if>
    </select>

    <select id="debtList" resultType="com.xforceplus.wapp.modules.base.entity.DebtEntity">
        <if test="offset != null and limit != null">
            select top (#{limit}) a.*
            from
            (select row_number() over(order by o.upload_date desc) as rownumber,o.*
            from(
        </if>
        SELECT
        *
        from t_dx_annoucement_debt t
        WHERE 1=1
        <if test="all != '1'.toString()">
          and t.is_release=1  and vender_id =#{venderId}
          <![CDATA[ and convert(varchar(100),releasetime,20) = #{releasetime}]]>
        </if>
        <if test="supplierAnnoucement != '1'.toString()">
            and have_read=0
        </if>
        <if test="announcementType != '4'.toString()">
            and debt_type=#{announcementType}
        </if>
        <if test="offset != null and limit != null">
            )as o
            )a
            where rownumber>#{offset};
        </if>

    </select>

    <select id="levelList" resultType="com.xforceplus.wapp.modules.base.entity.UserEntity">
        select org_level orgLevel
        from t_ac_user t WITH(NOLOCK)
        where t.org_level is not null
        GROUP BY org_level
    </select>

    <select id="userlist" resultType="com.xforceplus.wapp.modules.base.entity.UserEntity">
        select
        userid,
        usercode,
        username,
        phone,
        email,
        address,
        depname,
        org_level orgLevel
        from t_ac_user WITH(NOLOCK)
        <where>
            <if test="entity.usercode != null and entity.usercode != ''">
                and usercode = right(cast('000000'+rtrim(#{entity.usercode}) as varchar(20)),6)
            </if>
            <if test="entity.orgLevel != null and entity.orgLevel != ''">
                and org_level = #{entity.orgLevel}
            </if>
            <if test="entity.userList != null">
                and usercode in
                <foreach item="user" collection="entity.userList" open="(" separator="," close=")">
                    #{user.usercode}
                </foreach>
            </if>
            <if test="entity.venderId != null">
                AND usercode in
                <foreach item="item" collection="entity.venderId" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>

        </where>
    </select>

    <insert id="addAnnouncement" parameterType="com.xforceplus.wapp.modules.base.entity.AnnouncementEntity" useGeneratedKeys="true" keyProperty="entity.id">
    insert into t_dx_announcement
    (
        announcement_title,
        announcement_type,
        announcement_info,
        header,
        footer,
        releasetime,
        announcement_status
        <if test="entity.supplierUnreadNum != null and entity.supplierUnreadNum != ''">
            ,supplier_unreadnum
        </if>
        <if test="entity.announcementAnnex != null and entity.announcementAnnex != ''">
            ,announcement_annex
        </if>
        <if test="entity.trainDate != null">
            ,train_end_date
        </if>
    ) values(
        #{entity.announcementTitle},
        #{entity.announcementType},
        #{entity.announcementInfo},
        #{entity.header},
        #{entity.footer},
        #{entity.releasetime},
        0
        <if test="entity.supplierUnreadNum != null and entity.supplierUnreadNum != ''">
            ,#{entity.supplierUnreadNum}
        </if>
        <if test="entity.announcementAnnex != null and entity.announcementAnnex != ''">
            ,#{entity.announcementAnnex}
        </if>
        <if test="entity.trainDate != null">
            ,#{entity.trainDate}
        </if>
    )
    </insert>

    <insert id="addAnnouncementUserMiddle" >
        insert into t_dx_announcement_user_middle
        (
        announcementid,
        userid,
        have_read
        ) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.announcementid},
            #{item.userid},
            0
            )
        </foreach>
    </insert>

    <select id="getUserid" resultType="Integer">
        select userid
        from t_ac_user WITH(NOLOCK)
        <where>
            <if test="user.usercode != null and user.usercode != ''">
                and usercode = #{user.usercode}
            </if>
            <if test="user.username != null and user.username != ''">
                and username = #{user.username}
            </if>
        </where>
    </select>

    <select id="queryTemplateExist" resultType="Integer">
        select count(*)
        from t_dx_announcement
        where announcement_type=#{entity.announcementType}
    </select>

    <select id="queryTemplate" resultType="com.xforceplus.wapp.modules.base.entity.AnnouncementEntity">
        select id,announcement_info,announcement_type,announcement_title
        from t_dx_announcement
        where announcement_type=#{entity.announcementType}
    </select>

    <update id="updateTemplate">
        update t_dx_announcement
        set announcement_info=#{entity.announcementInfo}
        where announcement_type=#{entity.announcementType}
    </update>

    <select id="templateIsExist" resultType="Integer">
        select count(*)
        from t_dx_announcement
        where announcement_type='2' or announcement_type='3' or announcement_type='4'
        or announcement_type='5'
        or announcement_type='6'
    </select>

    <update id="releaseCustom">
        update t_dx_annoucement_debt
        set is_release='1',
        releasetime=getdate()
        where is_release='0'
    </update>

    <select id="queryDebtIsExist" resultType="int" >
        select count(*) from t_dx_annoucement_debt
        where
        vender_id=#{entity.venderId}
        <if test="entity.debtType == '2'.toString()">
            and order_no=#{entity.orderNo}
            and store=#{entity.store}
            and goods_no=#{entity.goodsNo}
            <![CDATA[ and convert(varchar(100),receive_date,23) = #{entity.receiveDate} ]]>
            <![CDATA[ and convert(varchar(100),goods_reduce_date,23) = #{entity.goodsReduceDate} ]]>
        </if>
        <if test="entity.debtType == '3'.toString()">
            and goods_no=#{entity.goodsNo}
            <![CDATA[ and convert(varchar(100),goods_reduce_date,23) = #{entity.goodsReduceDate} ]]>
            and reduce_stock_num=#{entity.reduceStockNum}
            and compensation_amount=#{entity.compensationAmount}
        </if>
    </select>

    <insert id="saveDebt" parameterType="com.xforceplus.wapp.modules.base.entity.DebtEntity">
        insert into t_dx_annoucement_debt
        (
        debt_type,
        have_read,
        is_release,
        vender_id,
        dept_no,
        order_no,
        store,
        receive_date,
        goods_reduce_date,
        goods_no,
        goods_name,
        receive_num,
        package_num,
        goods_actual_price,
        price_reduce_after,
        order_discount,
        tax_rate,
        price_difference,
        price_reduce_before,
        reduce_stock_num,
        protocol_no,
        protocol_amount,
        compensation_amount,
        upload_date,
        create_by
        )
        values
        (
            #{entity.debtType},
            '0',
            '0',
            #{entity.venderId},
            #{entity.deptNo},
            #{entity.orderNo},
            #{entity.store},
            CONVERT(datetime,#{entity.receiveDate}),
            CONVERT(datetime,#{entity.goodsReduceDate}),
            #{entity.goodsNo},
            #{entity.goodsName},
            #{entity.receiveNum},
            #{entity.packageNum},
            #{entity.goodsActualPrice},
            #{entity.priceReduceAfter},
            #{entity.orderDiscount},
            #{entity.taxRate},
            #{entity.priceDifference},
            #{entity.priceReduceBefore},
            #{entity.reduceStockNum},
            #{entity.protocolNo},
            #{entity.protocolAmount},
            #{entity.compensationAmount},
            getdate(),
            #{entity.createBy}
        )
    </insert>

    <insert id="saveFailureDebt" parameterType="com.xforceplus.wapp.modules.base.entity.DebtEntity">
        insert into t_dx_annoucement_debt_failure
        (
        debt_type,
        vender_id,
        dept_no,
        order_no,
        store,
        receive_date,
        goods_reduce_date,
        goods_no,
        goods_name,
        receive_num,
        package_num,
        goods_actual_price,
        price_reduce_after,
        order_discount,
        tax_rate,
        price_difference,
        price_reduce_before,
        reduce_stock_num,
        protocol_no,
        protocol_amount,
        compensation_amount,
        upload_date,
          create_by,
        failure_reason
        )
        values
        <foreach collection="list" item="item" separator=",">
        (
        #{item.debtType},
        #{item.venderId},
        #{item.deptNo},
        #{item.orderNo},
        #{item.store},
        CONVERT(datetime,#{item.receiveDate}),
        CONVERT(datetime,#{item.goodsReduceDate}),
        #{item.goodsNo},
        #{item.goodsName},
        #{item.receiveNum},
        #{item.packageNum},
        #{item.goodsActualPrice},
        #{item.priceReduceAfter},
        #{item.orderDiscount},
        #{item.taxRate},
        #{item.priceDifference},
        #{item.priceReduceBefore},
        #{item.reduceStockNum},
        #{item.protocolNo},
        #{item.protocolAmount},
        #{item.compensationAmount},
        getdate(),
        #{userCode},
        #{item.failureReason}
        )
        </foreach>
    </insert>

    <delete id="deleteDebt">
        delete from  t_dx_annoucement_debt where is_release = '0'
    </delete>

    <delete id="deleteDebtByCreateBy">
        delete from t_dx_annoucement_debt_failure where create_by = #{userCode}
    </delete>

    <select id="queryDebtFailureList" resultType="com.xforceplus.wapp.modules.base.entity.DebtEntity">
        select *
        from t_dx_annoucement_debt_failure
        where 1=1
        <if test="userCode != null and userCode != ''">
           and  create_by =#{userCode}
        </if>
    </select>

    <select id="getVenderDebtList" resultType="com.xforceplus.wapp.modules.base.entity.DebtEntity">
        select *
        from t_dx_annoucement_debt
        where is_release='1' and have_read='0'
        <if test="userCode != null and userCode != ''">
            and  vender_id =#{userCode}
        </if>
        <if test="releasetime != null and releasetime != ''">
            <![CDATA[ and convert(varchar(100),releasetime,20) = #{releasetime}]]>
        </if>
    </select>
</mapper>