<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xforceplus.wapp.modules.base.dao.AnnouncementInquiryDao">


    <select id="getAnnouncementInquiryCount" resultType="Integer">

        SELECT COUNT(*)
        FROM t_dx_announcement t
        <if test="supplierAnnoucement == '1'.toString()">
         left join t_dx_announcement_user_middle m on t.id=m.announcementid
          left join  (
            SELECT
            vender_id
            ,MIN(debt_type) debt_type2
            ,MAX( releasetime ) releasetime
            FROM  t_dx_annoucement_debt t
            LEFT JOIN t_ac_user u WITH(NOLOCK) on  u.usercode=t.vender_id
            LEFT JOIN t_ac_org o WITH(NOLOCK) on u.orgid=o.orgid
            where is_release='1' and vender_id=#{usercode} GROUP BY vender_id,o.orgname,t.releasetime
            ) d on d.debt_type2=t.announcement_type
        </if>
        WHERE 1=1
        <if test="supplierAnnoucement == '1'.toString()">
            and
             d.vender_id=#{usercode}
            or m.userid=#{userId}
        </if>
        <if test="announcementTitle != null and announcementTitle !='' ">
            AND announcement_title  like '%'+ #{announcementTitle}+'%'
        </if>
        <if test="announcementType != null and announcementType !='-1'">
            <if test="announcementType ==2">
                AND announcement_type in (2,3,4)
            </if>
            <if test="announcementType !=2">
            AND announcement_type = #{announcementType}
            </if>
        </if>

        <if test="createStartDate != null and createStartDate != ''">
            <![CDATA[ AND (convert(varchar(100),t.releasetime,23) >= #{createStartDate} ]]>
            <if test="supplierAnnoucement == '1'.toString()">
                <![CDATA[ OR convert(varchar(100),d.releasetime,23) >= #{createStartDate} ]]>
            </if>
            )
        </if>
        <if test="createEndDate != null and createEndDate != ''">
            <![CDATA[ AND (convert(varchar(100),t.releasetime,23)  <= #{createEndDate} ]]>
            <if test="supplierAnnoucement == '1'.toString()">
                <![CDATA[ OR convert(varchar(100),d.releasetime,23)  <= #{createEndDate} ]]>
            </if>
            )
        </if>
    </select>

    <select id="announcementInquiryList" resultType="com.xforceplus.wapp.modules.base.entity.AnnouncementEntity">

        <if test="offset != null and limit != null">
        select top (#{limit}) a.*
        from
        (select row_number() over(order by o.releasetime desc) as rownumber,o.*
        from(
        </if>
        SELECT
        t.id,
        announcement_type,
         announcement_info,
        t.releasetime,
        <if test="supplierAnnoucement == '1'.toString()">
        d.releasetime customReleasetime,
        d.debt_type,
        d.price_difference,
        d.compensation_amount,
        d.orgname orgName,
        d.goods_reduce_date,
        d.vender_id,
        m.is_agree,
        </if>
        announcement_status,
        announcement_title,
        supplier_unreadnum,
        supplier_readnum,
        supplier_disagreenum,
        supplier_agreenum,
        announcement_annex,
        header,
        footer
        from t_dx_announcement t
        <if test="supplierAnnoucement == '1'.toString()">
          left join t_dx_announcement_user_middle m on t.id=m.announcementid
            left join  (
            SELECT
            debt_type = stuff((
            SELECT ',' + debt_type
            FROM t_dx_annoucement_debt temp
            WHERE t.releasetime=temp.releasetime and
            t.vender_id = temp.vender_id
            FOR xml path('')) , 1 , 1 , '')
            ,sum(price_difference) price_difference
            ,sum(compensation_amount) compensation_amount
            ,o.orgname orgName
            ,vender_id
            ,MIN(goods_reduce_date)goods_reduce_date
            ,MIN(have_read)have_read
            ,MIN(debt_type) debt_type2
            ,MAX( releasetime ) releasetime
            FROM  t_dx_annoucement_debt t
            LEFT JOIN t_ac_user u WITH(NOLOCK) on  u.usercode=t.vender_id
            LEFT JOIN t_ac_org o WITH(NOLOCK) on u.orgid=o.orgid
            where is_release='1'  GROUP BY vender_id,o.orgname,t.releasetime
            ) d on d.debt_type2=t.announcement_type
        </if>
        WHERE 1=1
        <if test="supplierAnnoucement == '1'.toString()">
            and
            (d.vender_id=#{usercode}
            or m.userid=#{userId})
        </if>
        <if test="announcementTitle != null and announcementTitle !='' ">
            AND announcement_title  like '%'+ #{announcementTitle}+'%'
        </if>
        <if test="announcementType != null and announcementType !='-1'">
            <if test="announcementType ==2">
                AND announcement_type in (2,3,4)
            </if>
            <if test="announcementType !=2">
                AND announcement_type = #{announcementType}
            </if>
        </if>

        <if test="createStartDate != null and createStartDate != ''">
            <![CDATA[ AND (convert(varchar(100),t.releasetime,23) >= #{createStartDate} ]]>
            <if test="supplierAnnoucement == '1'.toString()">
                <![CDATA[ OR convert(varchar(100),d.releasetime,23) >= #{createStartDate} ]]>
            </if>
            )
        </if>
        <if test="createEndDate != null and createEndDate != ''">
            <![CDATA[ AND (convert(varchar(100),t.releasetime,23)  <= #{createEndDate} ]]>
            <if test="supplierAnnoucement == '1'.toString()">
                <![CDATA[ OR convert(varchar(100),d.releasetime,23)  <= #{createEndDate} ]]>
            </if>
            )
        </if>

        <if test="offset != null and limit != null">
        )as o
        )a
        where rownumber>#{offset};
        </if>

    </select>
    <select id="getDebtCount" resultType="Integer">
        SELECT COUNT(*)
        from t_dx_annoucement_debt
    </select>

    <select id="getAnnouncementUnreadCount" resultType="Integer">

        SELECT COUNT(*)
        from t_dx_announcement t
        left join t_dx_announcement_user_middle m on t.id=m.announcementid
        left join (
            SELECT
            MIN(have_read)have_read
            ,MIN(debt_type) debt_type2
            FROM  t_dx_annoucement_debt t
            where is_release='1' and have_read='0' and vender_id=#{usercode}  GROUP BY vender_id
        ) d on d.debt_type2=t.announcement_type
        WHERE
        d.have_read=0
         or (m.have_read=0 and  m.userid=#{userId})
    </select>

    <select id="announcementUnreadList" resultType="com.xforceplus.wapp.modules.base.entity.AnnouncementEntity">

        <if test="offset != null and limit != null">
            select top (#{limit}) a.*
            from
            (select row_number() over(order by o.releasetime desc) as rownumber,o.*
            from(
        </if>
        SELECT
        t.id,
        announcement_type,
        announcement_info,
        t.releasetime,
        announcement_status,
        announcement_title,
        supplier_unreadnum,
        supplier_readnum,
        supplier_disagreenum,
        supplier_agreenum,
        announcement_annex,
        header,
        footer,
        d.releasetime customReleasetime,
        d.debt_type,
        d.price_difference,
        d.compensation_amount,
        d.orgname orgName,
        d.goods_reduce_date,
        d.vender_id
        from t_dx_announcement t
        left join t_dx_announcement_user_middle m on t.id=m.announcementid
        left join (
            SELECT
            debt_type = stuff((
            SELECT ',' + debt_type
            FROM t_dx_annoucement_debt temp
            WHERE t.releasetime=temp.releasetime and t.vender_id = temp.vender_id and temp.have_read='0'
            FOR xml path('')) , 1 , 1 , '')
            ,sum(price_difference) price_difference
            ,sum(compensation_amount) compensation_amount
            ,o.orgname orgName
            ,vender_id
            ,MIN(goods_reduce_date)goods_reduce_date
            ,MIN(have_read)have_read
            ,MIN(debt_type) debt_type2
            ,MAX( releasetime ) releasetime
            FROM  t_dx_annoucement_debt t
            LEFT JOIN t_ac_user u WITH(NOLOCK) on  u.usercode=t.vender_id
            LEFT JOIN t_ac_org o WITH(NOLOCK) on u.orgid=o.orgid
            where is_release='1' and have_read='0' and vender_id=#{usercode}  GROUP BY vender_id,o.orgname,t.releasetime
        ) d on d.debt_type2=t.announcement_type
        WHERE
        d.have_read=0
        or (m.have_read=0 and  m.userid=#{userId})
        <if test="offset != null and limit != null">
            )as o
            )a
            where rownumber>#{offset};
        </if>

    </select>

    <select id="getCustomAnnouncementUnreadCount" resultType="Integer">
        SELECT
        count(*)
        FROM  t_dx_annoucement_debt t
        LEFT JOIN t_ac_user u WITH(NOLOCK) on  u.usercode=t.vender_id
        LEFT JOIN t_ac_org o WITH(NOLOCK) on u.orgid=o.orgid
        where is_release='1' and have_read='0'  GROUP BY vender_id,releasetime,o.orgname
    </select>

    <select id="getDebtByType" resultType="com.xforceplus.wapp.modules.base.entity.AnnouncementEntity">
        SELECT
        sum(price_difference) price_difference
        ,sum(compensation_amount) compensation_amount
        ,MAX(releasetime) releasetime
        ,MAX(o.orgname) orgName
        ,MAX(vender_id) vender_id
        ,MIN(goods_reduce_date)goods_reduce_date
        FROM  t_dx_annoucement_debt t
        LEFT JOIN t_ac_user u WITH(NOLOCK) on  u.usercode=t.vender_id
        LEFT JOIN t_ac_org o WITH(NOLOCK) on u.orgid=o.orgid
        where is_release='1' and vender_id=#{venderId} and debt_type=#{debtType}
        <if test="supplierAnnoucement != '1'.toString()">
            and have_read='0'
        </if>
    </select>

    <select id="customAnnouncementUnreadList" resultType="com.xforceplus.wapp.modules.base.entity.DebtEntity">

        <if test="offset != null and limit != null">
            select top (#{limit}) a.*
            from
            (select row_number() over(order by o.releasetime desc) as rownumber,o.*
            from(
        </if>
        SELECT
        debt_type = stuff((
        SELECT ',' + debt_type
        FROM t_dx_annoucement_debt temp
        WHERE t.vender_id = temp.vender_id
        FOR xml path('')) , 1 , 1 , '')
        ,sum(price_difference) price_difference
        ,sum(compensation_amount) compensation_amount
        ,releasetime
        ,o.orgname orgName
        ,vender_id
        ,MIN(goods_reduce_date)goods_reduce_date
        FROM  t_dx_annoucement_debt t
        LEFT JOIN t_ac_user u WITH(NOLOCK) on  u.usercode=t.vender_id
        LEFT JOIN t_ac_org o WITH(NOLOCK) on u.orgid=o.orgid
        where is_release='1' and have_read='0'  GROUP BY vender_id,releasetime,o.orgname
        <if test="offset != null and limit != null">
            )as o
            )a
            where rownumber>#{offset};
        </if>

    </select>

    <select id="getVenderCount" resultType="Integer">

        SELECT COUNT(*)
        FROM t_dx_announcement_user_middle t
        WHERE  t.announcementid=#{announcementId}
    </select>
    <select id="venderList" resultType="com.xforceplus.wapp.modules.base.entity.UserEntity">

        <if test="offset != null and limit != null">
            select top (#{limit}) a.*
            from
            (select row_number() over(order by o.id) as rownumber,o.*
            from(
        </if>
        SELECT
        t.id,
        u.usercode,
        u.username,
        t.is_agree
        FROM t_dx_announcement_user_middle t
        left join t_ac_user u WITH(NOLOCK) on u.userid=t.userid
        WHERE  t.announcementid=#{announcementId}
        <if test="offset != null and limit != null">
            )as o
            )a
            where rownumber>#{offset};
        </if>

    </select>

    <update id="updateAnnounceHaveRead">
        update t_dx_announcement_user_middle
         set have_read='1'
         where userid=#{userId} and announcementid=#{announceId}
    </update>

    <update id="updateAnnounceAgree">
        update t_dx_announcement_user_middle
        set is_agree=#{isAgree}
        where userid=#{userId} and announcementid=#{announceId}
    </update>

    <update id="updateAnnounceUnReadPlus">
        update t_dx_announcement
        set
        supplier_readnum=supplier_readnum+1,
        supplier_unreadnum=supplier_unreadnum-1
        where  id=#{announceId}
    </update>

    <update id="updateCustomAnnounceReadPlus">
        update t_dx_announcement
        set
        supplier_readnum=supplier_readnum+1
        where  id=#{announceId}
    </update>

    <update id="updateCustomAnnounceHaveRead">
        update t_dx_annoucement_debt
        set have_read='1'
        where vender_id=(select usercode from t_ac_user WITH(NOLOCK) where userid=#{userId}) and is_release='1'
        <if test="announcementType != null and announcementType !='' ">
            AND debt_type  =#{announcementType}
        </if>
        <if test="releasetime != null and releasetime != ''">
            <![CDATA[ and convert(varchar(100),releasetime,20) = #{releasetime}]]>
        </if>
    </update>

    <update id="updateAnnounceAgreePlus">
        update t_dx_announcement
        set
        supplier_agreenum=supplier_agreenum+1
        where  id=#{announceId}
    </update>

    <update id="updateAnnounceDisagreePlus">
        update t_dx_announcement
        set
        supplier_disagreenum=supplier_disagreenum+1
        where  id=#{announceId}
    </update>

    <delete id="deleteAnnouncement">
        delete from t_dx_announcement where id = #{id}
    </delete>

    <delete id="deleteAnnouncementVender">
        delete from t_dx_announcement_user_middle where announcementid = #{id}
    </delete>

    <update id="emptyDebt">
        truncate  table t_dx_annoucement_debt
    </update>

    <select id="queryAnnounce" resultType="com.xforceplus.wapp.modules.base.entity.AnnouncementEntity">
        select announcement_info,announcement_type
        from t_dx_announcement
        where id=#{entity.id}
    </select>

    <update id="updateAnnounce">
        update t_dx_announcement
        set announcement_info=#{entity.announcementInfo}
        where id=#{entity.id}
    </update>
</mapper>