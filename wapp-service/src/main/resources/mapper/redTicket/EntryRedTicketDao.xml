<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xforceplus.wapp.modules.redTicket.dao.EntryRedTicketDao">
    <select id="selectRedTicketList" resultType="com.xforceplus.wapp.modules.redTicket.entity.RedTicketMatch">
            SELECT
            <if test=" map.limit != null">
                TOP (#{map.limit})
            </if>
            A.*
            FROM
            (
            SELECT
            row_number () OVER (ORDER BY o.id ) AS rownumber ,o.*
            FROM
            (

                select
                distinct   m.id ,
                m.redticket_data_serial_number  redTicketDataSerialNumber,
                m.business_type                 businessType,
                m.red_total_amount              redTotalAmount,
                m.whether_upload_data           dataStatus,
                m.whether_upload_rednotice       noticeStatus,
                m.red_notice_number              redNoticeNumber,
                m.audit_results                  examineResult,
                m.audit_remarks                  examineRemarks,
                m.data_association               dataAssociation,
                m.rednotice_association           redNoticeAssociation,

                m.qs_status  qsStatus,
                m.tax_rate taxRate,
                m.invoice_code invoiceCode,
                m.invoice_no invoiceNo,
                m.redticket_creation_time redTicketCreationTime,
                m.uuid  uuid,
                m.invoice_amount invoiceAmount,
                m.gf_tax_no gfTaxNo,
                m.tax_amount taxAmount,
                m.invoice_date invoiceDate,
                m.venderid venderid,
                m.total_amount totalAmount,
                m.jvcode  jvcode,
                m.company_code  companyCode

                from t_dx_red_ticket_matching m WITH(NOLOCK)
        <if test='map.businessType == "1"'>
                        LEFT join t_dx_return_agreement_middle tmm  WITH(NOLOCK) on m.id =  tmm.red_ticket_matching_association
                        LEFT JOIN t_dx_all_record_invoice_detail r  WITH(NOLOCK) ON r.id =tmm.return_agreement_association
                    </if>

                    <if test='map.businessType == "2"'>
                        left join t_dx_return_agreement_middle  tmm  WITH(NOLOCK)  on m.id=tmm.red_ticket_matching_association
                        LEFT JOIN  t_dx_protocol  a WITH(NOLOCK)  on  a.id = tmm.return_agreement_association
                    </if>
               <where>
                   and m.redticket_status='0'
                   and  m.red_notice_number !='NULL'
                   and m.red_notice_number!= ''
                   and m.whether_upload_rednotice='1'
                   <choose>
                       <when test=' map.businessType == "1"'>
                           <if test="map.serviceNo != null and map.serviceNo != ''">
                               and r.return_goods_code like concat('%',concat(#{map.serviceNo},'%'))

                           </if>
                       </when>
                       <when test=' map.businessType == "2"'>
                           <if test="map.serviceNo != null and map.serviceNo != ''">
                               and a.protocol_no like concat('%',concat(#{map.serviceNo},'%'))
                           </if>

                       </when>

                   </choose>
                  <if test="map.userCode != null and map.userCode != ''">
                       and  m.venderid   like concat('%',concat(#{map.userCode},'%'))
                   </if>
                   <if test="map.invoiceDate1 != null and map.invoiceDate1 != ''">
                       <![CDATA[ AND convert(varchar(100),m.redticket_creation_time,23) >= #{map.invoiceDate1} ]]>
                   </if>
                   <if test="map.invoiceDate2 != null and map.invoiceDate2 != ''">
                       <![CDATA[ AND convert(varchar(10),m.redticket_creation_time,23)  <= #{map.invoiceDate2} ]]>
                   </if>

                   <if test="map.businessType != null and map.businessType != ''">
                       and m.business_type = #{map.businessType}
                   </if>
               </where>

            ) AS o
            ) A
            WHERE 1=1
            <if test="map.offset != null ">
                and   rownumber > #{map.offset}
            </if>



        </select>

    <select id="selectRedTicketListCount" resultType="java.lang.Integer">
        select
        count(1)
        from (
        select
        distinct m.id

        from t_dx_red_ticket_matching m WITH(NOLOCK)

        <if test='map.businessType == "1"'>
            LEFT join t_dx_return_agreement_middle tmm on m.id =  tmm.red_ticket_matching_association
            LEFT JOIN t_dx_all_record_invoice_detail r ON r.id =tmm.return_agreement_association
        </if>

        <if test='map.businessType == "2"'>
            left join t_dx_return_agreement_middle  tmm  on m.id=tmm.red_ticket_matching_association
            LEFT JOIN  t_dx_protocol  a on  a.id = tmm.return_agreement_association
        </if>

        <where>
            and  m.red_notice_number !='NULL'
            and m.redticket_status='0'
            and m.red_notice_number!=''
            and m.whether_upload_rednotice='1'
            <choose>
                <when test=' map.businessType == "1"'>
                    <if test="map.serviceNo != null and map.serviceNo != ''">
                        and r.return_goods_code like concat('%',concat(#{map.serviceNo},'%'))
                    </if>
                </when>
                <when test=' map.businessType == "2"'>
                    <if test="map.serviceNo != null and map.serviceNo != ''">
                        and a.protocol_no like concat('%',concat(#{map.serviceNo},'%'))
                    </if>

                </when>

            </choose>
            <if test="map.userCode != null and map.userCode != ''">
                and  m.venderid   like concat('%',concat(#{map.userCode},'%'))
            </if>
            <if test="map.invoiceDate1 != null and map.invoiceDate1 != ''">
                <![CDATA[ AND convert(varchar(100),m.redticket_creation_time,23) >= #{map.invoiceDate1} ]]>
            </if>
            <if test="map.invoiceDate2 != null and map.invoiceDate2 != ''">
                <![CDATA[ AND convert(varchar(10),m.redticket_creation_time,23)  <= #{map.invoiceDate2} ]]>
            </if>

            <if test="map.businessType != null and map.businessType != ''">
                and m.business_type = #{map.businessType}
            </if>
        </where>) aa

    </select>

    <select id="getGfNameAndTaxNo" resultType="com.xforceplus.wapp.modules.redTicket.entity.OrgEntity">
        select orgname,taxno,orgcode
        from 	t_ac_org WITH(NOLOCK)
        LEFT JOIN t_ac_user_taxno on t_ac_user_taxno.orgid = t_ac_org.orgid
        where  orgtype=8 and t_ac_user_taxno.userid =#{userId}

    </select>

    <select id="invoiceQueryList" resultType="com.xforceplus.wapp.modules.redTicket.entity.InvoiceEntity">

        SELECT
        id    ,
        invoice_no  invoiceNo,
        invoice_code  invoiceCode,
        invoice_date  invoiceDate,
        gf_tax_no   gfTaxNo,
        xf_tax_no   xfTaxNo,
        invoice_type invoiceType,
        invoice_amount invoiceAmount,
        tax_amount taxAmount,
        venderid venderid,
        uuid uuid,
        vendername vendername,
        tax_rate taxRate,
        total_amount totalAmount,
        dxhy_match_status dxhyMatchStatus,
        detail_yesorno detailYesorno,
        invoice_status invoiceStatus,
        red_notice_number redNoticeNumber,
        jvcode jvcode,
        company_code companyCode,
        source_system systemSource
        FROM t_dx_record_invoice WITH(NOLOCK)
        WHERE
            uuid=#{map.uuid}
    </select>
    <update id="insertRedNoticeNumber" >
          update  t_dx_record_invoice WITH(ROWLOCK) set
                  red_notice_number =#{map.redNoticeNumber},
                  flow_type = '3',
                  jvcode = #{map.jvcode},
                  company_code = #{map.companyCode}
          WHERE
           uuid=#{map.uuid}
    </update>

    <select id="getInvoiceQuery" resultType="com.xforceplus.wapp.modules.redTicket.entity.InvoiceEntity">
        SELECT
        id    ,
        invoice_no  invoiceNo,
        invoice_code  invoiceCode,
        invoice_date  invoiceDate,
        gf_tax_no   gfTaxNo,
        xf_tax_no   xfTaxNo,
        invoice_type invoiceType,
        invoice_amount invoiceAmount,
        tax_amount taxAmount,
        total_amount totalAmount,
        venderid venderid,
        uuid uuid,
        tax_rate taxRate,
        vendername vendername,
        total_amount totalAmount,
        dxhy_match_status dxhyMatchStatus,
        detail_yesorno detailYesorno,
        jvcode jvcode,
        invoice_status invoiceStatus,
        company_code companyCode,
        red_notice_number redNoticeNumber,
        source_system systemSource
        FROM t_dx_record_invoice WITH(NOLOCK)
        WHERE
        uuid=#{uuid}
    </select>

    <select id="getRedNoticeNumber" resultType="com.xforceplus.wapp.modules.redTicket.entity.RedTicketMatch">
        SELECT
	      tm.red_notice_number redNoticeNumber
        FROM
	      t_dx_red_ticket_matching tm WITH(NOLOCK)
        LEFT JOIN t_dx_red_ticket_matching_middle tmm ON tmm.red_ticket_matching_association = tm.id
        WHERE
	    concat (invoice_code, invoice_no) = #{uuid}
    </select>


    <!--插入供应商号和jvcode-->
    <update id="updateVenderid">
        UPDATE t_dx_record_invoice WITH(ROWLOCK)
        set
        venderid=#{map.venderid},
        jvcode=#{map.jvcode}
        where id=#{map.id}
    </update>

    <insert id="saveInvoice">
        INSERT INTO t_dx_record_invoice WITH(ROWLOCK) (
        invoice_code,invoice_no,
        invoice_amount,invoice_date,
        tax_amount,tax_rate,
        source_system,uuid,
        invoice_type,detail_yesorno,
        gf_tax_no,red_notice_number,
        total_amount,xf_tax_no,
        jvcode,venderid,
        valid,
        invoice_status,
        flow_type,
        company_code,
        scan_match_status

        ) VALUES (
        #{map.invoiceCode},
        #{map.invoiceNo},
        #{map.invoiceAmount},
        #{map.invoiceDate},
        #{map.taxAmount},
        #{map.taxRate},
        '2',
        #{map.uuid},
        '01',
        '0',
        #{map.gfTaxNo},
        #{map.redNoticeNumber},
        #{map.totalAmount},
        #{map.xfTaxNo},
        #{map.jvcode},
        #{map.venderid},
        '1',
        '0',
        '3',
         #{map.companyCode},
         '0'
        )
    </insert>
    <insert id="insertRedTicketInvoice" parameterType="com.xforceplus.wapp.modules.redTicket.entity.ImportEntity">
        INSERT INTO t_dx_record_invoice WITH(ROWLOCK) (
        invoice_code,
        invoice_no,
        invoice_amount,
        invoice_date,
        tax_amount,
        tax_rate,
        source_system,
        uuid,
        invoice_type,
        detail_yesorno,
        gf_tax_no,
        xf_tax_no,
        red_notice_number,
        total_amount,
        valid,
        invoice_status,
         flow_type,
         jvcode,
         venderid,
         scan_match_status,
         company_code


        ) VALUES (
        #{invoiceCode},
        #{invoiceNo},
        #{amount},
        #{invoiceDate},
        #{taxAmount},
        #{taxRate},
        '2',
         #{invoiceCode}+#{invoiceNo},
        '01',
        '0',
       #{gfTaxNo},
       #{xfTaxNo},
        #{redNoticeNumber},
        #{totalAmount},
         '1',
        '0',
        '3',
         #{jvcode},
        #{venderid},
        '0',
        #{companyCode}
        )
    </insert>
    <update id="saveInvoiceMatch">
        update t_dx_red_ticket_matching set
        scan_match_status ='0',
        invoice_code = #{map.invoiceCode},
        invoice_no = #{map.invoiceNo},
        invoice_amount = #{map.invoiceAmount},
        invoice_date = #{map.invoiceDate},
        tax_amount = #{map.taxAmount},
        tax_rate = #{map.taxRate},
        uuid = #{map.uuid},
        total_amount = #{map.totalAmount},
        gf_tax_no = #{map.gfTaxNo},
        invoice_type = '01',
        source_system = '2',
        whether_open_redticket = '1',
        open_redticket_time=getdate()
        where  red_notice_number = #{map.redNoticeNumber}
    </update>
    <update id="insertRedInvoiceMatch">
        update t_dx_red_ticket_matching set
        invoice_code = #{map.InvoiceEntity.invoiceCode},
        invoice_no = #{map.InvoiceEntity.invoiceNo},
        invoice_amount = #{map.InvoiceEntity.invoiceAmount},
        tax_amount = #{map.InvoiceEntity.taxAmount},
        total_amount = #{map.InvoiceEntity.totalAmount},
        tax_rate = #{map.InvoiceEntity.taxRate},
        uuid = #{map.InvoiceEntity.uuid},
        invoice_date = #{map.InvoiceEntity.invoiceDate},
        jvcode = #{map.InvoiceEntity.jvcode},
        company_code = #{map.InvoiceEntity.companyCode},
        whether_open_redticket = '1',
        invoice_type = '01'
        where  red_notice_number = #{map.redNoticeNumber}
    </update>
    <update id="saveInvoiceMatchEntity">
        update t_dx_red_ticket_matching set
        invoice_code = #{map.InvoiceEntity.invoiceCode},
        invoice_no = #{map.InvoiceEntity.invoiceNo},
        invoice_amount = #{map.InvoiceEntity.invoiceAmount},
        tax_rate = #{map.InvoiceEntity.taxRate},
        uuid = #{map.InvoiceEntity.uuid},
        total_amount = #{map.InvoiceEntity.totalAmount},
        invoice_type = '01',
        whether_open_redticket = '1',
        source_system = #{map.InvoiceEntity.sourceSystem}
        where  red_notice_number = #{map.redNoticeNumber}
    </update>
    <update id="saveRedNoticeNumber">
        update  t_dx_record_invoice WITH(ROWLOCK) set
        red_notice_number = #{redNoticeNumber},
        jvcode = #{jvcode},
        company_code = #{companyCode},
        flow_type = '3'
        where uuid = #{uuid}
    </update>

    <update id="allUpdate">
        update t_dx_record_invoice WITH(ROWLOCK) set
        scan_match_status ='0',
        invoice_code=#{map.invoiceCode},
        invoice_no=#{map.invoiceNo},
        invoice_amount=#{map.invoiceAmount},
        invoice_date=#{map.invoiceDate},
        tax_amount=#{map.taxAmount},
        tax_rate=#{map.taxRate},
        total_amount=#{map.totalAmount},
        source_system= 2 ,
        uuid=#{map.uuid},
        invoice_type='01',
        jvcode=#{map.jvcode},
        company_code=#{map.companyCode},
        flow_type='3',
        red_notice_number=#{map.redNoticeNumber}
        where id = #{map.invoiceId}
    </update>
    <update id="allUpdateBatchInvoice" parameterType="com.xforceplus.wapp.modules.redTicket.entity.ImportEntity">
        update t_dx_record_invoice WITH(ROWLOCK) set
        invoice_code=#{invoiceCode},
        invoice_no=#{invoiceNo},
        invoice_amount=#{amount},
        invoice_date=#{invoiceDate},
        tax_amount=#{taxAmount},
        tax_rate=#{taxRate},
        total_amount=#{totalAmount},
        source_system= 2 ,
        uuid=#{invoiceCode}+#{invoiceNo},
        invoice_type='01',
         gf_tax_no=#{gfTaxNo},
         xf_tax_no=#{xfTaxNo},
        red_notice_number=#{redNoticeNumber},
        jvcode=#{jvcode},
        company_code=#{companyCode},
        flow_type = 3
        where uuid = #{invoiceCode}+#{invoiceNo}
    </update>
    <update id="allUpdateMatch">
        update t_dx_red_ticket_matching set
        invoice_code=#{map.invoiceCode},
        invoice_no=#{map.invoiceNo},
        invoice_amount=#{map.invoiceAmount},
        invoice_date=#{map.invoiceDate},
        tax_amount=#{map.taxAmount},
        total_amount=#{map.totalAmount},
        tax_rate=#{map.taxRate},
        source_system= 2 ,
        whether_open_redticket = '1',
        uuid=#{map.uuid},
        invoice_type='01',
        red_notice_number=#{map.redNoticeNumber}
        where id = #{map.id}
    </update>
    <update id="saveInvoiceMatchBath" parameterType="com.xforceplus.wapp.modules.redTicket.entity.InvoiceEntity">
        update t_dx_red_ticket_matching set
        invoice_code=#{invoiceCode},
        invoice_no=#{invoiceNo},
        invoice_amount=#{invoiceAmount},
        invoice_date=#{invoiceDate},
        tax_amount=#{taxAmount},
        tax_rate=#{taxRate},
        total_amount=#{totalAmount},
        whether_open_redticket = '1',
        source_system= #{systemSource} ,
        uuid=#{uuid},
        invoice_type='01',
        gf_tax_no=#{gfTaxNo},
        red_notice_number=#{redNoticeNumber}
        where red_notice_number = #{redNoticeNumber}
    </update>
    <update id="allUpdateMatchBatch" parameterType="com.xforceplus.wapp.modules.redTicket.entity.ImportEntity">
        update t_dx_red_ticket_matching set
        scan_match_status ='0',
        invoice_code=#{invoiceCode},
        invoice_no=#{invoiceNo},
        invoice_amount=#{amount},
        invoice_date=#{invoiceDate},
        tax_amount=#{taxAmount},
        total_amount=#{totalAmount},
        whether_open_redticket = '1',
        tax_rate=#{taxRate},
        source_system= 2 ,
         gf_tax_no=#{gfTaxNo},
        uuid=#{invoiceCode}+#{invoiceNo},
        invoice_type='01',
        red_notice_number=#{redNoticeNumber}
        where red_notice_number = #{redNoticeNumber}
    </update>


    <!--修改税率-->
    <update id="updateRate">
        UPDATE t_dx_record_invoice WITH(ROWLOCK)
        set
        tax_rate=#{map.taxRate}
        where uuid=#{map.uuid}
    </update>
    <update id="updateRed">
        UPDATE t_dx_record_invoice WITH(ROWLOCK)
        set
         red_notice_number='',
         flow_type = '',
         jvcode = '',
         company_code = ''
        where red_notice_number=#{map.redNoticeNumber}
    </update>
    <update id="updateRedNoticeNumber">
        UPDATE t_dx_record_invoice WITH(ROWLOCK)
        set
        red_notice_number=#{map.redNoticeNumber},
        flow_type = '3',
        jvcode = #{map.jvcode},
        company_code = #{map.companyCode}
        where uuid=#{map.uuid}
    </update>
    <update id="updateRuteStatu">
        UPDATE t_dx_all_record_invoice_detail
        set
        return_goods_status='3'
        where redticket_data_serial_number=#{redTicketDataSerialNumber}
    </update>
    <update id="updateProcloStatu">
        UPDATE t_dx_protocol
        set
        protocol_status='2'
        where redticket_data_serial_number=#{redTicketDataSerialNumber}
    </update>
    <select id="selectRedTicketById" resultType="com.xforceplus.wapp.modules.redTicket.entity.RedTicketMatch">
          SELECT
	            uuid uuid,
                tax_rate taxRate,
                invoice_type invoiceType,
                invoice_code invoiceCode,
                invoice_no invoiceNo,
                invoice_date invoiceDate,
                invoice_amount invoiceAmount,
                tax_amount taxAmount,
                total_amount totalAmount
           FROM
	      t_dx_red_ticket_matching WITH(NOLOCK)
	      WHERE id =  #{map.id}
     </select>

    <select id="selectNoticeById" resultType="com.xforceplus.wapp.modules.redTicket.entity.RedTicketMatch">
          SELECT
	        m.id ,
            m.redticket_data_serial_number  redTicketDataSerialNumber,
            m.business_type                 businessType,
            m.red_total_amount              redTotalAmount,
            m.whether_upload_data           dataStatus,
            m.whether_upload_rednotice       noticeStatus,
            m.red_notice_number              redNoticeNumber,
            m.audit_results                  examineResult,
            m.audit_remarks                  examineRemarks,
            m.data_association               dataAssociation,
            m.data_association               dataAssociation,
            m.data_association               dataAssociation,
            m.rednotice_association           redNoticeAssociation
           FROM
	      t_dx_red_ticket_matching m WITH(NOLOCK)

          WHERE
	     m.id = #{map.id}
     </select>


    <select id="getRedNoticeMatch" resultType="com.xforceplus.wapp.modules.redTicket.entity.RedTicketMatch">
          SELECT
	        m.id ,
            m.redticket_data_serial_number  redTicketDataSerialNumber,
            m.business_type                 businessType,
            m.red_total_amount              redTotalAmount,
            m.whether_upload_data           dataStatus,
            m.whether_upload_rednotice       noticeStatus,
            m.red_notice_number              redNoticeNumber,
            m.audit_results                  examineResult,
            m.audit_remarks                  examineRemarks,
            m.data_association               dataAssociation,
            m.rednotice_association           redNoticeAssociation,
            m.venderid           venderid,
            m.gf_tax_no           gfTaxNo,
            m.jvcode            jvcode,
            m.company_code      companyCode
           FROM
	      t_dx_red_ticket_matching m WITH(NOLOCK)

          WHERE
	      m.red_notice_number = #{redNoticeNumber}
     </select>
    <select id="getXfTaxno" resultType="java.lang.String">
          SELECT
           taxno
           FROM
	         t_ac_org WITH(NOLOCK)
          WHERE
	       orgid = #{orgid}
     </select>
    <select id="getOrgCode" resultType="java.lang.String">
          SELECT
           orgcode
           FROM
	         t_ac_org WITH(NOLOCK)
          WHERE
	       taxno = #{gfTaxNo}
     </select>
</mapper>