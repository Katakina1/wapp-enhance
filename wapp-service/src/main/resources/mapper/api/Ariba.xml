<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xforceplus.wapp.modules.api.dao.AribaDao">
	<insert id="saveRequest" >
		insert into t_ac_ariba_api WITH(ROWLOCK)
		(
			request,
			basic,
			session_auth,
			response
		)
		values
		(
			#{request},
			#{basic},
			#{sessionAuth},
			#{response}
		)
	</insert>
	<update id="checkSave">
		update t_dx_record_invoice WITH(ROWLOCK) set
		jvcode=#{jvcode},
		company_code=#{companyCode},
		flow_type='8'
		where id = #{id};

	</update>
    <update id="checkUpdate">
        update t_dx_record_invoice WITH(ROWLOCK) set
        jvcode=#{fapiaosBean.jvCode},
        venderid=#{fapiaosBean.legacySupplierNumber},
        supplier_number=#{fapiaosBean.supplierNumber},
        company_code=#{fapiaosBean.companyCode},
        flow_type='8',
		qs_date = getdate(),
        qs_type = '1',
        qs_status = '1',
        scanning_seriano=#{item.scanId},
        scan_match_status=1,
        scan_match_date = getdate()
        where id = #{item.id}
    </update>

    <update id="signInMarkSave">
		update t_dx_record_invoice WITH(ROWLOCK) set
		venderid=#{venderid},
		supplier_number=#{supplierNumber}
		where invoice_code=#{invoiceCode} and invoice_no=#{invoiceNo}

	</update>
	<delete id="deleteDetail" >

		delete from t_dx_record_invoice_detail WITH(ROWLOCK) where uuid =#{invoiceDetailInfo.uuid}
	</delete>

	<insert id="insertNoDetailedInvoice">
		INSERT INTO t_dx_record_invoice_detail WITH(ROWLOCK) (
		uuid,
		invoice_code,
		invoice_no,
		detail_no,
		goods_name,
		model,
		unit,
		num,
		unit_price,
		detail_amount,
		tax_rate,
		tax_amount
		) VALUES
		<foreach collection="list" item="item" separator=",">
			(#{item.uuid},#{item.invoiceCode},#{item.invoiceNo},#{item.detailNo},#{item.goodsName},#{item.model},
			#{item.unit},#{item.num},#{item.unitPrice},#{item.detailAmount},#{item.taxRate},#{item.taxAmount})
		</foreach>
	</insert>

	<select id="selectRecordInvoiceCount" resultType="Integer">
		select count(*) from t_dx_record_invoice WITH(NOLOCK) where uuid =#{uuid}
	</select>
    <insert id="insertRecordInvoiceScan">
        insert into t_dx_record_invoice WITH(ROWLOCK) (
        invoice_type ,
        invoice_code ,
        invoice_no ,
        invoice_date ,
        gf_tax_no ,
        gf_name ,
        xf_name ,
        invoice_amount ,
        tax_amount ,
        total_amount ,
        xf_tax_no ,
        check_code ,
        uuid,
        valid,
        create_date,
        <if test="cyYoN==1">source_system,</if>
        detail_yesorno,
        remark,
        gf_address_and_phone,
        xf_address_and_phone,
        gf_bank_and_no,
        xf_bank_and_no,
        invoice_status,
        machinecode,tax_rate,lslbz,new_gf_taxno,flow_type,
        jvcode,
        company_code

        <if test="item.venderid != null and item.venderid != ''">
            ,venderid
        </if>
        <if test="item.supplierNumber != null and item.supplierNumber != ''">
            ,supplier_number
        </if>
        ) VALUES

        (
        #{item.invoiceType},
        #{item.invoiceCode},
        #{item.invoiceNo},
        #{item.invoiceDate},
        #{item.gfTaxNo},
        #{item.gfName},
        #{item.xfName},
        #{item.invoiceAmount},
        #{item.taxAmount},
        #{item.totalAmount},
        #{item.xfTaxNo},
        #{item.checkCode},
        #{item.uuid},
        '1',
        getdate(),
        <if test="cyYoN==1">'1',</if>

        #{item.detailYesorno},
        #{item.remark},
        #{item.gfAddressAndPhone},
        #{item.xfAddressAndPhone},
        #{item.gfBankAndNo},
        #{item.xfBankAndNo},
        #{item.invoiceStatus},
        #{item.machinecode}, #{item.taxRate},#{item.lslbz},#{item.newTaxno},'8',
         #{item.jvCode},
        #{item.companyCode}
        <if test="item.venderid != null and item.venderid != ''">
            ,#{item.venderid}
        </if>
        <if test="item.supplierNumber != null and item.supplierNumber != ''">
            ,#{item.supplierNumber}
        </if>
        )

    </insert>

    <update  id="updateRecordInvoiceScan">

        UPDATE  t_dx_record_invoice WITH(ROWLOCK) SET
        invoice_type =#{item.invoiceType},
        invoice_code =#{item.invoiceCode},
        invoice_no =#{item.invoiceNo},
        invoice_date =#{item.invoiceDate},
        new_gf_taxno =#{item.newTaxno},
        gf_tax_no =#{item.gfTaxNo},
        gf_name =#{item.gfName},
        xf_name =#{item.xfName},
        invoice_amount =#{item.invoiceAmount},
        tax_amount =#{item.taxAmount},
        total_amount =#{item.totalAmount},
        xf_tax_no =#{item.xfTaxNo},
        check_code =#{item.checkCode},
        uuid=#{item.uuid},
        valid=1,
        <if test="cyYoN==1">
            source_system=1,
        </if>
        detail_yesorno=#{item.detailYesorno},
        <if test="item.remark!='' and item.remark!=null">
            remark=#{item.remark},
        </if>
        gf_address_and_phone=#{item.gfAddressAndPhone},
        xf_address_and_phone=#{item.xfAddressAndPhone},
        gf_bank_and_no=#{item.gfBankAndNo},
        xf_bank_and_no=#{item.xfBankAndNo},
        invoice_status=#{item.invoiceStatus},
        machinecode=#{item.machinecode},
        lslbz=#{item.lslbz},
        tax_rate=#{item.taxRate},
        flow_type='8',
        jvcode=#{item.jvCode},
        company_code=#{item.companyCode}
        <if test="item.venderid != null and item.venderid != ''">
            ,venderid=#{item.venderid}
        </if>
        <if test="item.supplierNumber != null and item.supplierNumber != ''">
            , supplier_number=#{item.supplierNumber}
        </if>
        WHERE
        <if test="item.id!=null">
            id = #{item.id} or
        </if>
        uuid =#{item.uuid}

    </update>

    <update  id="updateRecordInvoiceConfirmStatus">
        UPDATE  t_dx_record_invoice WITH(ROWLOCK) SET
        confirm_status='1'
        WHERE
        invoice_code =#{fapiaosBean.fapiaoCode} AND invoice_no =#{fapiaosBean.fapiaoNumber}
    </update>

	<insert  id="signInMarkInsert">
        insert into t_dx_ariba_received WITH(ROWLOCK) (
        invoice_code,
        invoice_no,
        create_time
        ) VALUES
        (
       #{invoiceCode},#{invoiceNo},getdate()
        )
	</insert>
    <select  id="signInMarkQuery" resultType="java.lang.Integer">

    select count(1) FROM t_dx_ariba_received WITH(NOLOCK) where invoice_code=#{invoiceCode} and invoice_no=#{invoiceNo}

    </select>


    <insert  id="authInsert">
        insert into t_dx_ariba_paid WITH(ROWLOCK) (
        invoice_type,
        fapiao_code,
        fapiao_number,
        validation_code,
        jv_code,
        purchasing_document_number,
        supplier_number,
        supplier_name,
        company_code,
        status,
        item_no,
        tax_code,
        tax_rate,
        gl_account,
        mcc_code,
        cost_center,
        fapiao_total_amount,
        fapiao_tax_amount,
        fapiao_currency,
        create_date
        ) VALUES
        (
        #{fapiaosBean.invoiceType},
        #{fapiaosBean.fapiaoCode},
        #{fapiaosBean.fapiaoNumber},
        #{fapiaosBean.validationCode},
        #{fapiaosBean.jvCode},
        #{fapiaosBean.purchasingDocumentNumber},
        #{fapiaosBean.supplierNumber},
        #{fapiaosBean.supplierName},
        #{fapiaosBean.companyCode},
        #{itemsBean.status},
        #{itemsBean.itemNo},
        #{itemsBean.taxCode},
        #{itemsBean.taxRate},
        #{itemsBean.glAccount},
        #{itemsBean.mccCode},
        #{itemsBean.costCenter},
        #{itemsBean.fapiaoTotalAmount},
        #{itemsBean.fapiaoTaxAmount},
        #{itemsBean.fapiaoCurrency},
        getdate()
        )
    </insert>
    <select  id="authQuery" resultType="java.lang.Integer">

        select count(1) FROM t_dx_ariba_paid with(NOLOCK) where fapiao_code=#{fapiaosBean.fapiaoCode} and fapiao_number=#{fapiaosBean.fapiaoNumber} and tax_code=#{itemsBean.taxCode}

    </select>
    <delete id="deleteAuth">
        DELETE FROM
        t_dx_ariba_paid WITH(ROWLOCK)
        WHERE
        fapiao_code=#{fapiaosBean.fapiaoCode} and fapiao_number=#{fapiaosBean.fapiaoNumber} and tax_code=#{itemsBean.taxCode}

    </delete>
    <select id="getTaxInformation" resultType="com.xforceplus.wapp.modules.signin.entity.RecordInvoiceEntity">

        SELECT


        RIGHT(t.scan_id,17) scanRightId,
        SUBSTRING(t.scan_id,0,CHARINDEX('_', t.scan_id)) scanSubId,
        t.id,
        DATEDIFF(DAY, t.invoice_date, GETDATE()) jpl,
        t.invoice_code invoiceCode,
        t.invoice_no invoiceNo,
        t.invoice_type invoiceType,
        t.qs_type qsType,
        t.qs_date signInDate,
        t.qs_status qsStatus,
        t.vendername,t.rebateyesorno, t.check_code,t.total_amount,t.create_date, t.venderid,t.jv_code,t.company_code,
        t.file_type,tdri.rzh_date,tdri.rzh_yesorno,t.flow_type,t.isdel,
        t.venderid_edit venderidEdit,t.is_exist_stamper isExistStamper,t.no_exist_stamper_notes noExistStamperNotes,tdri.supplier_number
        from t_dx_invoice t WITH(NOLOCK)
        left join t_dx_record_invoice tdri WITH(NOLOCK) on tdri.uuid=t.uuid
        where
        t.valid = 1 and
        t.rebateyesorno = 0 and
        t.qs_type=1 and
        t.invoice_type in('01','04')
        and (t.qs_status= '1' or (t.qs_status!= '1' and tdri.invoice_status!= '0'))
        and t.flow_type= '8' and t.ariba_confirm_status is null




    </select>

    <update id="updateTaxInformation">
        update t_dx_invoice WITH(ROWLOCK)  set
        ariba_confirm_status='OK' , ariba_confirm_date=getdate()
        where invoice_code = #{item.fapiaoCode} and invoice_no=#{item.fapiaoNumber}

    </update>

    <insert id="insertInvoiceImgforCustomerOne">
        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(*) from t_dx_invoice_img with(NOLOCK) where scan_id = #{item.scanId} ;
        </selectKey>
        <if test="count==0">

            insert into t_dx_invoice_img WITH(ROWLOCK)(
            image_path,
            uuid,
            valid,
            scan_id,
            create_date,
            update_date,
            seq_no,
            array_name,
            is_image,
            from_customer,
            user_id,
            scan_point,
            billtype_code
            )values
            (
            #{item.imagePath},
            #{item.uuid},
            '1',
            #{item.scanId},
            getdate(),
            getdate(),
            #{item.seqNo},
            #{item.arrayName},
            #{item.isImage},
            '1',
            #{item.userId},
            #{item.scanPoint},
            #{item.billtypeCode}
            )
        </if>
        <if test="count>0">
            update
            t_dx_invoice_img  with(ROWLOCK)
            set
            image_path=#{item.imagePath},
            uuid=#{item.uuid},
            valid='1',
            create_date=getdate(),
            update_date=getdate(),
            seq_no= #{item.seqNo},
            array_name=#{item.arrayName},
            is_image= #{item.isImage},
            from_customer='1',
            user_id= #{item.userId},
            scan_point=#{item.scanPoint},
            billtype_code=#{item.billtypeCode}
            where
            scan_id = #{item.scanId}
        </if>
    </insert>
    <insert id="insertScanInvoice">

        <selectKey keyProperty="count" resultType="int" order="BEFORE">
            select count(*) from t_dx_invoice with(NOLOCK) where
            <if test="item.id==null">
                uuid = #{item.uuId}
                and invoice_date = #{item.invoiceDate}
                and invoice_amount = #{item.invoiceAmount}
            </if>
            <if test="item.id!=null">
                id=#{item.id}
            </if>
            and rebateyesorno = 0;
        </selectKey>
        <if test="count==0">
            INSERT INTO t_dx_invoice WITH(ROWLOCK)
            (
            invoice_type ,
            invoice_code ,
            invoice_no ,
            invoice_date ,
            gf_tax_no ,
            gf_name ,
            xf_name ,
            invoice_amount ,
            tax_amount ,
            total_amount ,
            xf_tax_no ,
            check_code ,
            uuid,
            qs_status,
            qs_type,
            valid,
            create_date,
            qs_date,
            user_account,
            user_name,
            notes,
            scan_id,dy_invoice_code,
            dy_invoice_no,
            invoice_serial_no,
            bindyesorno,packyesorno,rebateyesorno,expressnoyesorno,refundyesorno,file_type,
            venderid,
            jv_code,company_code,isdel,flow_type,venderid_edit,is_exist_stamper
            )
            VALUES

            (
            #{item.invoiceType},
            #{item.invoiceCode},
            #{item.invoiceNo},
            #{item.invoiceDate},
            #{item.gfTaxNo},
            #{item.gfName},
            #{item.xfName},
            #{item.invoiceAmount},
            #{item.taxAmount},
            #{item.totalAmount},
            #{item.xfTaxNo},
            #{item.checkCode},
            #{item.uuId},
            #{item.qsStatus},
            1,
            1,
            getdate(),
            getdate(),
            #{item.userAccount},
            #{item.userName},
            #{item.notes},
            #{item.scanId},
            #{item.dyInvoiceCode},#{item.dyInvoiceNo},#{item.localTrmSeqNum},
            0,0,0,0,0,#{item.fileType},
            #{item.venderid},
            #{item.jvCode},#{item.companyCode},0,#{item.flowType},#{item.venderidEdit},#{item.isExistStamper}

            )
        </if>
        <if test="count > 0">
            update t_dx_invoice with(ROWLOCK)
            set
            is_exist_stamper=#{item.isExistStamper},
            no_exist_stamper_notes=#{item.noExistStamperNotes},
                invoice_type = #{item.invoiceType},
                invoice_code  =  #{item.invoiceCode},
                invoice_no  = #{item.invoiceNo},
                invoice_date = #{item.invoiceDate},
                gf_tax_no =  #{item.gfTaxNo},
                gf_name =  #{item.gfName},
                xf_name =  #{item.xfName},
                invoice_amount  =  #{item.invoiceAmount},
                tax_amount =  #{item.taxAmount},
                total_amount  = #{item.totalAmount},
                xf_tax_no   = #{item.xfTaxNo},
                check_code  = #{item.checkCode},
                uuid  = #{item.uuId},
                qs_status = #{item.qsStatus},
                qs_type = 1,
                valid  =  1,
                create_date  =  getdate(),
                qs_date  = getdate(),
                user_account = #{item.userAccount},
                user_name = #{item.userName},
                notes = #{item.notes},
                scan_id= #{item.scanId},
                dy_invoice_code = #{item.dyInvoiceCode},
                dy_invoice_no= #{item.dyInvoiceNo},
                invoice_serial_no = #{item.localTrmSeqNum},
                bindyesorno=0,
                packyesorno=0,
                rebateyesorno=0,
                expressnoyesorno=0,
                refundyesorno=0,
                file_type=#{item.fileType},
                venderid=#{item.venderid},
                jv_code=#{item.jvCode},
                company_code = #{item.companyCode},
                flow_type=#{item.flowType},
                venderid_edit=#{item.venderidEdit}
            where
            <if test="item.id==null">
                uuid = #{item.uuId}
                and invoice_date = #{item.invoiceDate}
                and invoice_amount = #{item.invoiceAmount}
            </if>
            <if test="item.id!=null">
                id=#{item.id}
            </if> and rebateyesorno = 0
        </if>

    </insert>


    <select id="queryList" resultType="com.xforceplus.wapp.modules.report.entity.ComprehensiveInvoiceQueryEntity">

        select
        id,
        invoice_type invoiceType,
        invoice_code invoiceCode,
        invoice_no invoiceNo,
        invoice_date invoiceDate,
        gf_tax_no gfTaxNo,
        gf_name gfName,
        xf_tax_no xfTaxNo,
        xf_name xfName,
        invoice_amount invoiceAmount,
        tax_amount taxAmount,
        total_amount totalAmount,
        remark,
        invoice_status invoiceStatus,
        rzh_date rzhDate,
        qs_date qsDate,
        rzh_belong_date rzhBelongDate,
        rzh_yesorno rzhYesorno,
        auth_status authStatus,
        qs_type qsType,
        qs_status qsStatus,
        certificate_no certificateNo,
        dxhy_match_status dxhyMatchStatus,
        match_date matchDate,
        host_status hostStatus,
        scanning_seriano scanningSeriano,
        bbindingno,
        packingno,
        tax_rate taxRate,
        venderid venderId,
        tp_status tpStatus,
        scan_match_status scanMatchStatus,
        scan_match_date scanMatchDate,
        host_date hostDate,
        jvcode jvCode,
        payment_date paymentDate,
        company_code  companyCode,
        flow_type     flowType,
        check_code
        from t_dx_record_invoice WITH(NOLOCK)
        where 1=1
        <if test="map.checkCode != null and map.checkCode != '-1'">
            and (check_code =#{map.checkCode}  or  right(check_code,6)=#{map.checkCode} )
        </if>
        <if test="map.invoiceDateQuery != null and map.invoiceDateQuery != '-1'">
            <![CDATA[ AND convert(varchar(100),invoice_date,23) = #{map.invoiceDateQuery} ]]>
        </if>

        <if test="map.invoiceCode != null and map.invoiceCode != ''">
            and invoice_code = #{map.invoiceCode}
        </if>
        <if test="map.invoiceNo != null and map.invoiceNo != ''">
            and invoice_no  =  #{map.invoiceNo}
        </if>
        <if test="map.flowType != null and map.flowType != ''and map.flowType != '-1'">
            and flow_type = #{map.flowType}
        </if>

    </select>
</mapper>